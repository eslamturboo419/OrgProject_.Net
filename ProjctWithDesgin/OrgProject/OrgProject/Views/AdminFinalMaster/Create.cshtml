@model OrgProject.Models.FinalMaster

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
     $(document).ready(function () {
         Here();
    });


     function Here() {
         $("#normalDropDown").chosen({
             disable_search_threshold: 3
         });
    };



</script>


<h2> Create New Master </h2>


@using (Html.BeginForm("Create", "AdminFinalMaster", FormMethod.Post,
                              new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.NameOfMaster, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NameOfMaster, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NameOfMaster, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Descrpition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Descrpition, new { htmlAttributes = new { @class = "form-control" } })*@

            @Html.TextAreaFor(model => model.Descrpition, htmlAttributes: new { @class = "form-control input-lg", @style = "height: 200px" })
            @Html.ValidationMessageFor(model => model.Descrpition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TitleOfMaster, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TitleOfMaster, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TitleOfMaster, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DoctorExam, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DoctorExam, new { htmlAttributes = new { @class = "form-control" ,placeholder="spearte each doctotr with , " } })
            @Html.ValidationMessageFor(model => model.DoctorExam, "", new { @class = "text-danger" })
        </div>
    </div>



    @*<div class="form-group">
            @Html.LabelFor(model => model.SourceCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SourceCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SourceCode, "", new { @class = "text-danger" })
            </div>
        </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, "Is Active", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">


            @Html.DropDownListFor(model => model.IsActive,
                        new SelectList(new[] { new { Value = "True", Text = "Yes"  },
new { Value = "False", Text = "No" },
                        }, "Value", "Text", Model
                        ), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })


        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Dep_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownList("Dep_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Dep_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Doc_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownList("Doc_id", null, htmlAttributes: new { @class = "form-control", id = "normalDropDown" })
            @Html.ValidationMessageFor(model => model.Doc_id, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.PdfFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextBoxFor(m => m.PdfFile, new { type = "file", id = "file", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PdfFile, "", new { @class = "text-danger" })
            @Html.ValidationMessage("PDFError", "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ImageProject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">

            @Html.TextBoxFor(m => m.ImageProject, new { type = "file", id = "file2", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ImageProject, "", new { @class = "text-danger" })
            @Html.ValidationMessage("ImageError", "", new { @class = "text-danger" })

        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.VideoUpload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.VideoUpload, new { type = "file", id = "file3", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VideoUpload, "", new { @class = "text-danger" })
                @Html.ValidationMessage("VideoError", "", new { @class = "text-danger" })
            </div>
        </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.YearThisMaster, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            <select name="YearThisMaster" id="YearThisMaster" class="form-control">
                <option value=""> ---- </option>
                @for (int i = DateTime.Now.Year; i >= 2010; i--)
                {
                    <option value="@i"> @i </option>
                }
            </select>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
